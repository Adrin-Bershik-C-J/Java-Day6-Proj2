Project Structure

Directory structure:
└── adrin-bershik-c-j-java-day6-proj2/
    ├── pom.xml
    └── src/
        ├── main/
        │   └── java/
        │       └── com/
        │           └── day6proj2/
        │               ├── Main.java
        │               ├── controller/
        │               │   └── BugController.java
        │               ├── entity/
        │               │   └── Bug.java
        │               ├── repository/
        │               │   ├── BugRepository.java
        │               │   └── BugRepositoryImpl.java
        │               ├── service/
        │               │   └── BugService.java
        │               └── utils/
        │                   └── DBUtil.java
        └── test/
            └── java/
                └── com/
                    └── day6proj2/
                        └── AppTest.java

package com.day6proj2.controller;

import com.day6proj2.entity.Bug;
import com.day6proj2.service.BugService;
import java.util.List;

public class BugController {
    private final BugService service;

    public BugController(BugService service) {
        this.service = service;
    }

    public void createBug(String title, String description, String status) {
        service.addBug(title, description, status);
    }

    public void displayBugs() {
        List<Bug> bugs = service.fetchAllBugs();
        if (bugs.isEmpty()) {
            System.out.println("No bugs found.");
        } else {
            for (Bug b : bugs) {
                System.out.println("ID: " + b.getId() + ", Title: " + b.getTitle() +
                        ", Status: " + b.getStatus() + ", Description: " + b.getDescription());
            }
        }
    }

    public void deleteBug(int id) {
        service.deleteBug(id);
    }

    public void updateBugStatus(int id, String status) {
        service.updateBugStatus(id, status);
    }
}

package com.day6proj2.entity;

public class Bug {

    private String description, title, status;
    private int id;

    public Bug() {
    }

    public Bug(String title, String description, String status) {
        this.title = title;
        this.description = description;
        this.status = status;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

}

package com.day6proj2.repository;

import java.util.List;

import com.day6proj2.entity.Bug;

public interface BugRepository {
    void insertBug(Bug bug);

    List<Bug> getAllBugs();

    void deleteBugById(int id);

    void updateBugStatus(int id, String status);
}

package com.day6proj2.repository;

import java.util.List;

import com.day6proj2.entity.Bug;

public interface BugRepository {
    void insertBug(Bug bug);

    List<Bug> getAllBugs();

    void deleteBugById(int id);

    void updateBugStatus(int id, String status);
}

package com.day6proj2.utils;

import java.sql.Connection;
import java.sql.DriverManager;

public class DBUtil {
    public static Connection getConnection() {
        Connection conn = null;
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/postgres",
                "postgres",
                "Adrin@123"
            );
        } catch (Exception e) {
            e.printStackTrace();
        }
        return conn;
    }
}

package com.day6proj2.utils;

import java.sql.Connection;
import java.sql.DriverManager;

public class DBUtil {
    public static Connection getConnection() {
        Connection conn = null;
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/postgres",
                "postgres",
                "Adrin@123"
            );
        } catch (Exception e) {
            e.printStackTrace();
        }
        return conn;
    }
}
